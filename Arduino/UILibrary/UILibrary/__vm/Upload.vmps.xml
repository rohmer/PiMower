<VisualMicro>
  <Program Name="UILibrary" Ext=".ino" Location="C:\Users\rohme\Source\Repos\PiMower\Arduino\UILibrary\UILibrary">
    <Compile IsDebugStart="1" IsGdb="0" CompilerErrors="0" ConfigurationName="Debug" UseConfigurationNameInBuildFolder="True" StopOnError="False" OptimiseLibs="True" OptimiseCore="True" BuildPath="C:\Users\rohme\AppData\Local\Temp\VMBuilds\UILibrary\arduino_due_x_dbg\Debug" ReCompileIfSourceIsNewer="1" SketchName="UILibrary" ReportDigitalPins="0" ReportAnalogPins="0" ReportI2C="0" ReportFreeMemory="0" IncludeDebug="1" LastDebugPreProcessorDefinitions="VM_DEBUG;VM_DEBUG_ENABLE 1;VM_DEBUGGER_TYPE_HARDWARESERIAL 0;VM_DEBUGGER_TYPE_SOFTWARESERIAL 1;VM_DEBUGGER_TYPE_FASTSERIAL 2;VM_DEBUGGER_TYPE_USB 3;VM_DEBUGGER_TYPE_TEENSY 4;VM_DEBUGGER_TYPE_UART 5;VM_DEBUGGER_TYPE_USART 6;VM_DEBUGGER_TYPE_USBSERIAL 7;VM_DEBUGGER_TYPE_TTYUART 8;VM_DEBUGGER_TYPE_NET_CONSOLE 9;VM_DEBUGGER_TYPE_Uart 10;VM_DEBUGGER_TYPE_COSA 11;VM_DEBUGGER_TYPE_CDCSerialClass 12;VM_DEBUGGER_TYPE_HARDWARESERIAL1 13;VM_DEBUGGER_TYPE_HARDWARESERIAL2 14;VM_DEBUGGER_TYPE_HARDWARESERIAL3 15;VM_DEBUGGER_TYPE_NET_UDP 16;VM_DEBUGGER_TYPE_USBAPI 17;VM_DEBUGGER_TYPE VM_DEBUGGER_TYPE_UART;VM_DEBUG_BREAKPAUSE;VM_DEBUG_AUTO_REPORTING;VM_DEBUG_READ_DIGITAL_PORTS 1;" IncludesDebug="1" IsCompiled="1" />
    <Platform Name="visualmicro" Package="arduino" Platform="sam" Architecture="4.8.3-2014q1">
      <Board Name="arduino_due_x_dbg" Description="Arduino Due (Programming Port)" CoreFolder="C:\Users\rohme\AppData\Local\arduino15\packages\arduino\hardware\sam\1.6.11\cores\arduino" VariantFullPath="C:\Users\rohme\AppData\Local\arduino15\packages\arduino\hardware\sam\1.6.11\variants\arduino_due_x" McuIdePath="C:\Program Files (x86)\Microsoft Visual Studio\2017\Enterprise\Common7\IDE\Extensions\ampyaykj.lgy\Micro Platforms\visualmicro\ide" McuSketchBookPath="C:\Users\rohme\Documents\Arduino" name="Arduino Due (Programming Port)" vid.0="0x2341" pid.0="0x003d" vid.1="0x2A03" pid.1="0x003d" upload.tool="bossac" upload.protocol="sam-ba" upload.maximum_size="524288" upload.use_1200bps_touch="true" upload.wait_for_upload_port="false" upload.native_usb="false" build.mcu="cortex-m3" build.f_cpu="84000000L" build.usb_manufacturer="&quot;Arduino LLC&quot;" build.usb_product="&quot;Arduino Due&quot;" build.board="SAM_DUE" build.core="arduino" build.extra_flags="-D__SAM3X8E__ -mthumb {build.usb_flags}" build.ldscript="linker_scripts/gcc/flash.ld" build.variant="arduino_due_x" build.variant_system_lib="libsam_sam3x8e_gcc_rel.a" build.vid="0x2341" build.pid="0x003e" runtime.ide.path="C:\Program Files (x86)\Microsoft Visual Studio\2017\Enterprise\Common7\IDE\Extensions\ampyaykj.lgy\Micro Platforms\visualmicro\ide" runtime.os="windows" build.system.path="C:\Users\rohme\AppData\Local\arduino15\packages\arduino\hardware\sam\1.6.11\system" runtime.ide.version="10801" target_package="arduino" target_platform="sam" runtime.hardware.path="C:\Users\rohme\AppData\Local\arduino15\packages\arduino\hardware\sam" originalid="arduino_due_x_dbg" intellisense.tools.path="{runtime.ide.path}/hardware/tools/g++_arm_none_eabi" intellisense.include.paths="{runtime.tools.arm-none-eabi-gcc.path}/arm-none-eabi\include\c++\4.8.3;{runtime.tools.arm-none-eabi-gcc.path}/arm-none-eabi/include/c++/4.8.3/arm-none-eabi/;{runtime.tools.arm-none-eabi-gcc.path}/arm-none-eabi/include/;{runtime.tools.arm-none-eabi-gcc.path}\lib\gcc\arm-none-eabi\4.8.3\include;{build.core.coresparentfolder.vmresolved}\system\CMSIS\Device\ATMEL\;{build.core.coresparentfolder.vmresolved}\system\libsam;{build.core.coresparentfolder.vmresolved}\system\libsam\include;{build.core.coresparentfolder.vmresolved}\system\CMSIS\CMSIS\Include\;{build.core.coresparentfolder.vmresolved}\system\CMSIS\CMSIS\Include\;{vm.boardsource.path}\system\CMSIS\CMSIS\Include\;{vm.boardsource.path}\system\CMSIS\Device\ATMEL\;{vm.boardsource.path}\system\libsam;{vm.boardsource.path}\system\libsam\include;{intellisense.tools.path}\arm-none-eabi\include;{intellisense.tools.path}\arm_none_eabi\include\;{intellisense.tools.path}\lib\gcc\arm-none-eabi\4.4.1\include;{intellisense.tools.path}\lib\gcc\arm-none-eabi\4.4.1\include\;{build.core.coresparentfolder.vmresolved}/system/CMSIS/Device/ATMEL/sam3xa/include/pio;{build.core.coresparentfolder.vmresolved}/system/libsam/include;{build.core.coresparentfolder.vmresolved}/CMSIS/CMSIS/Include/;{build.core.coresparentfolder.vmresolved}/system/CMSIS/Device/ATMEL/sam3xa/include;{build.core.coresparentfolder.vmresolved}\system/libsam;{build.core.coresparentfolder.vmresolved}\system/CMSIS/Device/ATMEL;{build.core.coresparentfolder.vmresolved}\system/CMSIS/Device/ATMEL/sam3xa/include;" tools.atprogram.cmd.path="%AVRSTUDIO_EXE_PATH%\atbackend\atprogram" tools.atprogram.cmd.setwinpath="true" tools.atprogram.program.params.verbose="-v" tools.atprogram.program.params.quiet="-q" tools.atprogram.program.pattern="&quot;{cmd.path}&quot; -d {build.mcu} {program.verbose} {program.extra_params} program -c -f &quot;{build.path}\{build.project_name}.hex&quot;" tools.atprogram.program.xpattern="&quot;{cmd.path}&quot; {AVRSTUDIO_BACKEND_CONNECTION} -d {build.mcu} {program.verbose} {program.extra_params} program -c -f &quot;{build.path}\{build.project_name}.hex&quot;" version="1.6.11" compiler.warning_flags="-w" compiler.warning_flags.none="-w" compiler.warning_flags.default="" compiler.warning_flags.more="-Wall" compiler.warning_flags.all="-Wall -Wextra" compiler.path="{runtime.tools.arm-none-eabi-gcc.path}/bin/" compiler.c.cmd="arm-none-eabi-gcc" compiler.c.flags="-c -g -Os {compiler.warning_flags} -std=gnu11 -ffunction-sections -fdata-sections -nostdlib --param max-inline-insns-single=500 -Dprintf=iprintf -MMD" compiler.c.elf.cmd="arm-none-eabi-gcc" compiler.c.elf.flags="-Os -Wl,--gc-sections" compiler.S.cmd="arm-none-eabi-gcc" compiler.S.flags="-c -g -x assembler-with-cpp -MMD" compiler.cpp.cmd="arm-none-eabi-g++" compiler.cpp.flags="-c -g -Os {compiler.warning_flags} -std=gnu++11 -ffunction-sections -fdata-sections -nostdlib -fno-threadsafe-statics --param max-inline-insns-single=500 -fno-rtti -fno-exceptions -Dprintf=iprintf -MMD" compiler.ar.cmd="arm-none-eabi-ar" compiler.ar.flags="rcs" compiler.objcopy.cmd="arm-none-eabi-objcopy" compiler.objcopy.eep.flags="-O ihex -j .eeprom --set-section-flags=.eeprom=alloc,load --no-change-warnings --change-section-lma .eeprom=0" compiler.elf2hex.flags="-O binary" compiler.elf2hex.cmd="arm-none-eabi-objcopy" compiler.ldflags="" compiler.size.cmd="arm-none-eabi-size" compiler.define="-DARDUINO=" compiler.combine.flags="-u _sbrk -u link -u _close -u _fstat -u _isatty -u _lseek -u _read -u _write -u _exit -u kill -u _getpid" compiler.c.extra_flags="" compiler.c.elf.extra_flags="" compiler.cpp.extra_flags="" compiler.S.extra_flags="" compiler.ar.extra_flags="" compiler.elf2hex.extra_flags="" compiler.libsam.c.flags="&quot;-I{build.system.path}/libsam&quot; &quot;-I{build.system.path}/CMSIS/CMSIS/Include/&quot; &quot;-I{build.system.path}/CMSIS/Device/ATMEL/&quot;" build.usb_flags="-DUSB_VID={build.vid} -DUSB_PID={build.pid} -DUSBCON '-DUSB_MANUFACTURER={build.usb_manufacturer}' '-DUSB_PRODUCT={build.usb_product}'" recipe.c.o.pattern="&quot;{compiler.path}{compiler.c.cmd}&quot; {compiler.c.flags} -mcpu={build.mcu} -mthumb -DF_CPU={build.f_cpu} -DARDUINO={runtime.ide.version} -DARDUINO_{build.board} -DARDUINO_ARCH_{build.arch} {compiler.c.extra_flags} {build.extra_flags} {compiler.libsam.c.flags} {includes} &quot;{source_file}&quot; -o &quot;{object_file}&quot;" recipe.cpp.o.pattern="&quot;{compiler.path}{compiler.cpp.cmd}&quot; {compiler.cpp.flags} -mcpu={build.mcu} -mthumb -DF_CPU={build.f_cpu} -DARDUINO={runtime.ide.version} -DARDUINO_{build.board} -DARDUINO_ARCH_{build.arch} {compiler.cpp.extra_flags} {build.extra_flags} {compiler.libsam.c.flags} {includes} &quot;{source_file}&quot; -o &quot;{object_file}&quot;" recipe.S.o.pattern="&quot;{compiler.path}{compiler.S.cmd}&quot; {compiler.S.flags} -mcpu={build.mcu} -mthumb -DF_CPU={build.f_cpu} -DARDUINO={runtime.ide.version} -DARDUINO_{build.board} -DARDUINO_ARCH_{build.arch} {compiler.S.extra_flags} {build.extra_flags} {compiler.libsam.c.flags} {includes} &quot;{source_file}&quot; -o &quot;{object_file}&quot;" archive_file_path="{build.path}/{archive_file}" recipe.ar.pattern="&quot;{compiler.path}{compiler.ar.cmd}&quot; {compiler.ar.flags} {compiler.ar.extra_flags} &quot;{archive_file_path}&quot; &quot;{object_file}&quot;" recipe.c.combine.pattern="&quot;{compiler.path}{compiler.c.elf.cmd}&quot; -mcpu={build.mcu} -mthumb {compiler.c.elf.flags} &quot;-T{build.variant.path}/{build.ldscript}&quot; &quot;-Wl,-Map,{build.path}/{build.project_name}.map&quot; {compiler.c.elf.extra_flags} -o &quot;{build.path}/{build.project_name}.elf&quot; &quot;-L{build.path}&quot; -Wl,--cref -Wl,--check-sections -Wl,--gc-sections -Wl,--entry=Reset_Handler -Wl,--unresolved-symbols=report-all -Wl,--warn-common -Wl,--warn-section-align -Wl,--start-group {compiler.combine.flags} {object_files} &quot;{build.variant.path}/{build.variant_system_lib}&quot; &quot;{build.path}/{archive_file}&quot; -Wl,--end-group -lm -gcc" recipe.objcopy.bin.pattern="&quot;{compiler.path}{compiler.elf2hex.cmd}&quot; {compiler.elf2hex.flags} {compiler.elf2hex.extra_flags} &quot;{build.path}/{build.project_name}.elf&quot; &quot;{build.path}/{build.project_name}.bin&quot;" recipe.output.tmp_file="{build.project_name}.bin" recipe.output.save_file="{build.project_name}.{build.variant}.bin" recipe.size.pattern="&quot;{compiler.path}{compiler.size.cmd}&quot; -A &quot;{build.path}/{build.project_name}.elf&quot;" recipe.size.regex="\.text\s+([0-9]+).*" tools.bossac.path="{runtime.tools.bossac.path}" tools.bossac.cmd="bossac.exe" tools.bossac.cmd.windows="bossac.exe" tools.bossac.upload.params.verbose="-i -d" tools.bossac.upload.params.quiet="" tools.bossac.upload.params.verify="-v" tools.bossac.upload.pattern="&quot;{path}/{cmd}&quot; {upload.verbose} --port={serial.port.file} -U {upload.native_usb} -e -w {upload.verify} -b &quot;{build.path}/{build.project_name}.bin&quot; -R" tools.bossac_remote.upload.pattern="/usr/bin/run-bossac {upload.verbose} --port=ttyATH0 -U {upload.native_usb} -e -w -v -b /tmp/sketch.bin -R" vm.platform.root.path="C:\Program Files (x86)\Microsoft Visual Studio\2017\Enterprise\Common7\IDE\Extensions\ampyaykj.lgy\Micro Platforms\arduino16x" runtime.tools.avr-gcc.path="C:\Users\rohme\AppData\Local\arduino15\packages\arduino\tools\avr-gcc\4.9.2-atmel3.5.4-arduino2" runtime.tools.avr-gcc-4.8.1-arduino5.path="C:\Users\rohme\AppData\Local\arduino15\packages\Cosa\tools\avr-gcc\4.8.1-arduino5" runtime.tools.avrdude.path="C:\Users\rohme\AppData\Local\arduino15\packages\arduino\tools\avrdude\6.3.0-arduino9" runtime.tools.avrdude-6.0.1-arduino5.path="C:\Users\rohme\AppData\Local\arduino15\packages\Cosa\tools\avrdude\6.0.1-arduino5" runtime.tools.avr-gcc-4.9.2-atmel3.5.4-arduino2.path="C:\Users\rohme\AppData\Local\arduino15\packages\arduino\tools\avr-gcc\4.9.2-atmel3.5.4-arduino2" runtime.tools.avrdude-6.3.0-arduino9.path="C:\Users\rohme\AppData\Local\arduino15\packages\arduino\tools\avrdude\6.3.0-arduino9" runtime.tools.arduinoOTA.path="C:\Users\rohme\AppData\Local\arduino15\packages\arduino\tools\arduinoOTA\1.1.1" runtime.tools.arduinoOTA-1.1.1.path="C:\Users\rohme\AppData\Local\arduino15\packages\arduino\tools\arduinoOTA\1.1.1" runtime.tools.arm-none-eabi-gcc.path="C:\Users\rohme\AppData\Local\arduino15\packages\arduino\tools\arm-none-eabi-gcc\4.8.3-2014q1" runtime.tools.arm-none-eabi-gcc-4.8.3-2014q1.path="C:\Users\rohme\AppData\Local\arduino15\packages\arduino\tools\arm-none-eabi-gcc\4.8.3-2014q1" runtime.tools.bossac.path="C:\Users\rohme\AppData\Local\arduino15\packages\arduino\tools\bossac\1.6.1-arduino" runtime.tools.bossac-1.6.1-arduino.path="C:\Users\rohme\AppData\Local\arduino15\packages\arduino\tools\bossac\1.6.1-arduino" runtime.vm.boardinfo.id="arduino_due_x_dbg" runtime.vm.boardinfo.name="arduino_due_x_dbg" runtime.vm.boardinfo.desc="Arduino Due (Programming Port)" runtime.vm.boardinfo.src_location="C:\Users\rohme\AppData\Local\arduino15\packages\arduino\hardware\sam\1.6.11" ide.hint="Ready-To-Go IDE: Use the Board and Library managers to install." ide.location.key="visualmicro" ide.location.ide.auto="true" ide.location.ide.winreg="Arduino Default Application" ide.location.sketchbook.winreg="Arduino Default Sketchbook" ide.location.sketchbook.preferences="sketchbook.path" ide.default.revision_name="1.8.2" ide.default.version="10802" ide.platforms.basedon="arduino16x" ide.default.package="arduino" ide.default.platform="avr" ide.multiplatform="true" ide.includes="arduino.h" ide.exe_name="arduino" ide.platformswithoutpackage="false" ide.includes.fallback="wprogram.h" ide.extension="ino" ide.extension.fallback="pde" ide.versionGTEQ="160" ide.hosts="atmel" vm.debug="true" software="ARDUINO" ssh.user.name="root" ssh.user.default.password="arduino" ssh.host.wwwfiles.path="/www/sd" ide.location.preferences.arduinoData="{runtime.sketchbook.path}\ArduinoData" ide.location.preferences="%VM_APPDATA_LOCAL%\arduino15\preferences.txt" ide.location.preferences_fallback="%VM_APPDATA_ROAMING%\arduino15\preferences.txt" ide.location.contributions="%VM_APPDATA_LOCAL%\arduino15" ide.location.contributions_fallback="%VM_APPDATA_ROAMING%\arduino15" ide.contributions.boards.allow="true" ide.contributions.boards.ignore_unless_rewrite_found="true" ide.contributions.libraries.allow="true" ide.contributions.boards.support.urls.wiki="https://github.com/arduino/Arduino/wiki/Unofficial-list-of-3rd-party-boards-support-urls" ide.create_platforms_from_boardsTXT.teensy="build.core" ide.appid="visualmicro" location.sketchbook="C:\Users\rohme\Documents\Arduino" build.core.vmresolved="C:\Users\rohme\AppData\Local\arduino15\packages\arduino\hardware\sam\1.6.11\cores\arduino" build.core.parentfolder.vmresolved="C:\Users\rohme\AppData\Local\arduino15\packages\arduino\hardware\sam\1.6.11\cores" build.core.coresparentfolder.vmresolved="C:\Users\rohme\AppData\Local\arduino15\packages\arduino\hardware\sam\1.6.11" build.core.path="C:\Users\rohme\AppData\Local\arduino15\packages\arduino\hardware\sam\1.6.11\cores\arduino" vm.core.include="arduino.h" vm.boardsource.path="C:\Users\rohme\AppData\Local\arduino15\packages\arduino\hardware\sam\1.6.11" runtime.platform.path="C:\Users\rohme\AppData\Local\arduino15\packages\arduino\hardware\sam\1.6.11" vm.platformname.name="sam" build.arch="SAM" builder.noino="false" build.variant.vmresolved="C:\Users\rohme\AppData\Local\arduino15\packages\arduino\hardware\sam\1.6.11\variants\arduino_due_x" build.architecture="4.8.3-2014q1" vmresolved.compiler.path="C:\Users\rohme\AppData\Local\arduino15\packages\arduino\tools\arm-none-eabi-gcc\4.8.3-2014q1\bin\" vmresolved.tools.path="C:\Users\rohme\AppData\Local\arduino15\packages\arduino\tools\arm-none-eabi-gcc\4.8.3-2014q1" build.path="C:\Users\rohme\AppData\Local\Temp\VMBuilds\UILibrary\arduino_due_x_dbg\Debug" build.project_name="UILibrary.ino" build.project_path="C:\Users\rohme\Source\Repos\PiMower\Arduino\UILibrary\UILibrary" ProjectDir="C:\Users\rohme\Source\Repos\PiMower\Arduino\UILibrary\UILibrary\" build.vm.extra_cpp_flags="-fpermissive" vm.runtime.compiler.showwarnings="false" vm.runtime.upload.verbose="false" vm.runtime.upload.verify="false" serial.port.file="COM4" serial.port="COM4" serial.port.num="4" serial.port.caption="COM4   - Arduino Due Programming Port" serial.Caption="Arduino Due Programming Port (COM4)" serial.ClassGuid="{4d36e978-e325-11ce-bfc1-08002be10318}" serial.CompatibleID.value0="USB\Class_02" serial.ConfigManagerErrorCode="0" serial.ConfigManagerUserConfig="False" serial.CreationClassName="Win32_PnPEntity" serial.Description="Arduino Due Programming Port" serial.DeviceID="USB\VID_2A03&amp;PID_003D\95530343734351908191" serial.HardwareID.value0="USB\VID_2A03&amp;PID_003D" serial.Manufacturer="Arduino Srl (www.arduino.org)" serial.Name="Arduino Due Programming Port (COM4)" serial.PNPClass="Ports" serial.PNPDeviceID="USB\VID_2A03&amp;PID_003D\95530343734351908191" serial.Present="True" serial.Service="usbser" serial.Status="OK" serial.SystemCreationClassName="Win32_ComputerSystem" serial.SystemName="DESKTOP-ILJLV48" serial.vid="0x2A03" serial.pid="0x003D" serial.iserial="95530343734351908191" serial.port.iserial="95530343734351908191" vm.runtime.compiler.auto_discover_includes="true" vm.runtime.compiler.auto_discover_includes_cache="true" build.vm.build.vmdebug="1" build.vm.build.isgdb="0" build.vm.build.optimised="1" vm.last.buildpath="C:\Users\rohme\AppData\Local\Temp\VMBuilds\UILibrary\arduino_due_x_dbg\Debug" />
    </Platform>
    <Debug EnableBreak="1" DebugEnabled="1" DebugMode="Full" AutoReportDigitalPins="1" AutoReportFreeMemory="0" JumpToSource="1" LocalPort="COM4" BandWidthThrottleEnabled="0" InBreakLiveView="1" PerfStats="1" IsGdb="0" RemotePortSpeedWrittenToDebugSource="115200" />
    <VCCodeModel>
      <VCCodeMacros />
    </VCCodeModel>
    <BreakPoints>
      <BreakPoint Index="1" Name="WindowManager.cpp, line 21" Id="447302e0-df47-469a-a736-8a8f06ec7e96" Enabled="1" Message="" MessageTextType="2" PreProcessedMessage="" Condition="" ConditionType="1" CurrentHits="0" File="c:\users\rohme\source\repos\pimower\arduino\uilibrary\uilibrary\baseitems\windowmanager.cpp" FileLine="21" FileColumn="1" FunctionName="WindowManager(const uint8_t CS, const uint8_t RST, &#xD;&#xA;	const uint8_t MOSI, const uint8_t SCLK, const uint8_t MISO,&#xD;&#xA;	RA8875sizes lcdSize)" FunctionLineOffset="13" FunctionColumnOffset="1" HitCountTarget="1" HitCountType="1" Language="C++" LocationType="3" Tag="&lt;vmbp Id='447302e0-df47-469a-a736-8a8f06ec7e96'/&gt;" Type="1" ToString="System.__ComObject" BreakWhenHit="1">
        <Source>14	#endif
15		int width = 800, height = 480;
16		if (lcdSize == RA8875sizes::RA8875_480x272)
17		{
18			width = 480;
19			height = 272;
20		}
--&gt;21		lcd-&gt;touchEnable(true);
22		lcd-&gt;begin(lcdSize);
23		setDefaultTheme();
24		createBaseWindow();
25		Logger::Trace("Creating WindowManager", "WindowManager()");
26	
27	}
28	
29	void WindowManager::createBaseWindow()
30	{	
</Source>
      </BreakPoint>
      <BreakPoint Index="2" Name="WindowManager.cpp, line 16" Id="f22c30d8-042b-4948-963e-5a3064f89ca1" Enabled="1" Message="" MessageTextType="2" PreProcessedMessage="" Condition="" ConditionType="1" CurrentHits="0" File="c:\users\rohme\source\repos\pimower\arduino\uilibrary\uilibrary\baseitems\windowmanager.cpp" FileLine="16" FileColumn="1" FunctionName="WindowManager(const uint8_t CS, const uint8_t RST, &#xD;&#xA;	const uint8_t MOSI, const uint8_t SCLK, const uint8_t MISO,&#xD;&#xA;	RA8875sizes lcdSize)" FunctionLineOffset="8" FunctionColumnOffset="1" HitCountTarget="1" HitCountType="1" Language="C++" LocationType="3" Tag="&lt;vmbp Id='f22c30d8-042b-4948-963e-5a3064f89ca1'/&gt;" Type="1" ToString="System.__ComObject" BreakWhenHit="1">
        <Source>9	{
10	#ifdef TEENSY3X
11		lcd = new Adafruit_RA8875(CS, RST, MOSI, SCLK, MISO);
12	#else
13		lcd = new Adafruit_RA8875(CS, RST);
14	#endif
15		int width = 800, height = 480;
--&gt;16		if (lcdSize == RA8875sizes::RA8875_480x272)
17		{
18			width = 480;
19			height = 272;
20		}
21		lcd-&gt;touchEnable(true);
22		lcd-&gt;begin(lcdSize);
23		setDefaultTheme();
24		createBaseWindow();
25		Logger::Trace("Creating WindowManager", "WindowManager()");
</Source>
      </BreakPoint>
      <BreakPoint Index="3" Name="WindowLibrary.ino, line 30" Id="9afa670b-d3cb-479b-8b1a-d3561a1e83ef" Enabled="1" Message="" MessageTextType="2" PreProcessedMessage="" Condition="" ConditionType="1" CurrentHits="0" File="c:\users\rohme\source\repos\pimower\arduino\windowlibrary\windowlibrary.ino" FileLine="30" FileColumn="1" FunctionName="setup()" FunctionLineOffset="2" FunctionColumnOffset="1" HitCountTarget="1" HitCountType="1" Language="C++" LocationType="3" Tag="&lt;vmbp Id='9afa670b-d3cb-479b-8b1a-d3561a1e83ef'/&gt;" Type="1" ToString="System.__ComObject" BreakWhenHit="1">
        <Source>23		theme.SetThemeAttribute(eThemeObjType::clickable, eThemeObjState::activeState, eThemeObjAttribute::textAlignmentVertical, eTextAlignment::Middle);
24		theme.SetThemeAttribute(eThemeObjType::clickable, eThemeObjState::activeState, eThemeObjAttribute::textFont, eUITextFont::AileronBlack12);
25		theme.SetThemeAttribute(eThemeObjType::clickable, eThemeObjState::activeState, eThemeObjAttribute::textColor, Color::AntiqueWhite);
26	}
27	
28	// the setup function runs once when you press reset or power the board
29	void setup() {
--&gt;30		if (!lcd.begin(RA8875_800x480))
31		{
32			Serial.println("RA8875 not found");
33			while (1);
34		}
35	
36		Serial.println("Found RA8875");
37		lcd.displayOn(true);
38		lcd.GPIOX(true);
39		lcd.PWM1config(true, RA8875_PWM_CLK_DIV1024); // PWM output for backlight
</Source>
      </BreakPoint>
      <BreakPoint Index="4" Name="WindowLibrary.ino, line 36" Id="f0ed8e07-2864-4dcb-8012-6e4ac9ce6acb" Enabled="1" Message="" MessageTextType="2" PreProcessedMessage="" Condition="" ConditionType="1" CurrentHits="0" File="c:\users\rohme\source\repos\pimower\arduino\windowlibrary\windowlibrary.ino" FileLine="36" FileColumn="1" FunctionName="setup()" FunctionLineOffset="8" FunctionColumnOffset="1" HitCountTarget="1" HitCountType="1" Language="C++" LocationType="3" Tag="&lt;vmbp Id='f0ed8e07-2864-4dcb-8012-6e4ac9ce6acb'/&gt;" Type="1" ToString="System.__ComObject" BreakWhenHit="1">
        <Source>29	void setup() {
30		if (!lcd.begin(RA8875_800x480))
31		{
32			Serial.println("RA8875 not found");
33			while (1);
34		}
35	
--&gt;36		Serial.println("Found RA8875");
37		lcd.displayOn(true);
38		lcd.GPIOX(true);
39		lcd.PWM1config(true, RA8875_PWM_CLK_DIV1024); // PWM output for backlight
40		lcd.PWM1out(255);
41		lcd.graphicsMode();
42		lcd.fillScreen(RA8875_BLACK);
43		
44		textObj = new UIText(lcd, Rectangle(100, 100, 0, 0), "Test #1", theme, eThemeObjState::activeState);
45	}
</Source>
      </BreakPoint>
      <BreakPoint Index="5" Name="WindowLibrary.ino, line 44" Id="f082baac-8a02-432b-8287-d0e3d1e493d1" Enabled="1" Message="" MessageTextType="2" PreProcessedMessage="" Condition="" ConditionType="1" CurrentHits="0" File="c:\users\rohme\source\repos\pimower\arduino\windowlibrary\windowlibrary.ino" FileLine="44" FileColumn="1" FunctionName="setup()" FunctionLineOffset="13" FunctionColumnOffset="1" HitCountTarget="1" HitCountType="1" Language="C++" LocationType="3" Tag="&lt;vmbp Id='f082baac-8a02-432b-8287-d0e3d1e493d1'/&gt;" Type="1" ToString="System.__ComObject" BreakWhenHit="1">
        <Source>37		lcd.displayOn(true);
38		lcd.GPIOX(true);
39		lcd.PWM1config(true, RA8875_PWM_CLK_DIV1024); // PWM output for backlight
40		lcd.PWM1out(255);
41		lcd.graphicsMode();
42		lcd.fillScreen(RA8875_BLACK);
43		
--&gt;44		textObj = new UIText(lcd, Rectangle(100, 100, 0, 0), "Test #1", theme, eThemeObjState::activeState);
45	}
46	
47	// the loop function runs over and over again until power down or reset
48	void loop() {
49		textObj-&gt;Update();
50	}
51	
52	/*
53	
</Source>
      </BreakPoint>
      <BreakPoint Index="6" Name="WindowLibrary.ino, line 49" Id="e9e1f15d-4bdd-4d81-942d-766fce7d2772" Enabled="1" Message="" MessageTextType="2" PreProcessedMessage="" Condition="" ConditionType="1" CurrentHits="0" File="c:\users\rohme\source\repos\pimower\arduino\windowlibrary\windowlibrary.ino" FileLine="49" FileColumn="1" FunctionName="loop()" FunctionLineOffset="2" FunctionColumnOffset="1" HitCountTarget="1" HitCountType="1" Language="C++" LocationType="3" Tag="&lt;vmbp Id='e9e1f15d-4bdd-4d81-942d-766fce7d2772'/&gt;" Type="1" ToString="System.__ComObject" BreakWhenHit="1">
        <Source>42		lcd.fillScreen(RA8875_BLACK);
43		
44		textObj = new UIText(lcd, Rectangle(100, 100, 0, 0), "Test #1", theme, eThemeObjState::activeState);
45	}
46	
47	// the loop function runs over and over again until power down or reset
48	void loop() {
--&gt;49		textObj-&gt;Update();
50	}
51	
52	/*
53	
54	// Library only supports hardware SPI at this time
55	// Connect SCLK to UNO Digital #13 (Hardware SPI clock)
56	// Connect MISO to UNO Digital #12 (Hardware SPI MISO)
57	// Connect MOSI to UNO Digital #11 (Hardware SPI MOSI)
58	#define RA8875_INT 3
</Source>
      </BreakPoint>
      <BreakPoint Index="7" Name="UIText.cpp, line 53" Id="c9cc4424-cf6e-436c-bbec-f8ea71b6742b" Enabled="1" Message="" MessageTextType="2" PreProcessedMessage="" Condition="" ConditionType="1" CurrentHits="0" File="c:\users\rohme\source\repos\pimower\arduino\windowlibrary\uielements\uitext.cpp" FileLine="53" FileColumn="1" FunctionName="Update()" FunctionLineOffset="50" FunctionColumnOffset="1" HitCountTarget="1" HitCountType="1" Language="C++" LocationType="3" Tag="&lt;vmbp Id='c9cc4424-cf6e-436c-bbec-f8ea71b6742b'/&gt;" Type="1" ToString="System.__ComObject" BreakWhenHit="1">
        <Source>46	#ifdef DEBUG
47		Logger::Trace("Text Color: %d", themeSettings.textColor);
48		Logger::Trace("Text Scale: %d", themeSettings.textScale);
49	#endif
50		tft.textEnlarge(themeSettings.textScale);
51		tft.setCursor(location.x1, location.y1);
52		tft.textWrite(text.c_str());
--&gt;53		Logger::Trace("Writing \"%s\" at (%d,%d)", text.c_str(), location.x1, location.y1);
54		
55		updatePending= false;
56	}
57	
58	void UIText::SetText(std::string text)
59	{
60		this-&gt;text = text;
61		setButtonLines();
62		location = FontHelper::GetTextRect(lcd, text, themeSettings.textFont, Point(location.x1, location.y1));
</Source>
      </BreakPoint>
      <BreakPoint Index="8" Name="UIText.cpp, line 21" Id="cdad5ccb-a44b-497a-a690-4e398e03ba93" Enabled="1" Message="" MessageTextType="2" PreProcessedMessage="" Condition="" ConditionType="1" CurrentHits="0" File="c:\users\rohme\source\repos\pimower\arduino\windowlibrary\uielements\uitext.cpp" FileLine="21" FileColumn="1" FunctionName="setButtonLines()" FunctionLineOffset="3" FunctionColumnOffset="1" HitCountTarget="1" HitCountType="1" Language="C++" LocationType="3" Tag="&lt;vmbp Id='cdad5ccb-a44b-497a-a690-4e398e03ba93'/&gt;" Type="1" ToString="System.__ComObject" BreakWhenHit="1">
        <Source>14	
15	void UIText::setButtonLines()
16	{
17		textLines.clear();	
18		std::string::size_type pos = 0;
19		std::string::size_type prev = 0;
20		while((pos=text.find('\n',prev))!=std::string::npos)
--&gt;21		{
22			std::string token = text.substr(prev, pos - prev);
23	#ifdef DEBUG
24			Logger::Trace("Adding: %s to line list", token.c_str());
25	#endif
26			textLines.push_back(token);
27		}
28		
29		textLines.push_back(text.substr(prev));
30	#ifdef DEBUG
</Source>
      </BreakPoint>
      <BreakPoint Index="9" Name="UIText.cpp, line 27" Id="ed749f5f-1a27-4244-9c88-623832aaa7d9" Enabled="1" Message="" MessageTextType="2" PreProcessedMessage="" Condition="" ConditionType="1" CurrentHits="0" File="c:\users\rohme\source\repos\pimower\arduino\windowlibrary\uielements\uitext.cpp" FileLine="27" FileColumn="1" FunctionName="setButtonLines()" FunctionLineOffset="10" FunctionColumnOffset="1" HitCountTarget="1" HitCountType="1" Language="C++" LocationType="3" Tag="&lt;vmbp Id='ed749f5f-1a27-4244-9c88-623832aaa7d9'/&gt;" Type="1" ToString="System.__ComObject" BreakWhenHit="1">
        <Source>20		while((pos=text.find('\n',prev))!=std::string::npos)
21		{
22			std::string token = text.substr(prev, pos - prev);
23	#ifdef DEBUG
24			Logger::Trace("Adding: %s to line list", token.c_str());
25	#endif
26			textLines.push_back(token);
--&gt;27		}
28		
29		textLines.push_back(text.substr(prev));
30	#ifdef DEBUG
31		std::string s = text.substr(prev);
32		Logger::Trace("Adding: %s to line list", s.c_str());
33	#endif
34	
35	}
36	
</Source>
      </BreakPoint>
      <BreakPoint Index="10" Name="Theme.cpp, line 130" Id="631612dd-619a-4df3-88b1-c5754c89b06c" Enabled="1" Message="{themeSettings.textScale}" MessageTextType="2" PreProcessedMessage="{0}" Condition="" ConditionType="1" CurrentHits="0" File="c:\users\rohme\source\repos\pimower\arduino\windowlibrary\windowmanager\theme.cpp" FileLine="130" FileColumn="1" FunctionName="LoadTheme(eThemeObjType objType, eThemeObjState objState)" FunctionLineOffset="96" FunctionColumnOffset="1" HitCountTarget="1" HitCountType="1" Language="C++" LocationType="3" Tag="&lt;vmbp Id='631612dd-619a-4df3-88b1-c5754c89b06c'/&gt;" Type="1" ToString="System.__ComObject" BreakWhenHit="0">
        <Source>123					themeSettings.textScale = 2;
124				else
125					if (val == 2)
126						themeSettings.textScale = 3;
127					else
128						themeSettings.textScale = 1;
129		}
--&gt;130		val = GetThemeAttribute(objType, objState, eThemeObjAttribute::textSpacing);
131		if (val != -1)
132		{
133			themeSettings.textSpacing = val;
134		}
135		else
136		{
137			themeSettings.textSpacing = 0;
138		}
139		val = GetThemeAttribute(objType, objState, eThemeObjAttribute::textInterlineSpacing);
</Source>
        <MessageVariables>
          <MessageVariable Name="themeSettings.textScale" Index="1" />
        </MessageVariables>
      </BreakPoint>
      <BreakPoint Index="11" Name="Theme.cpp, line 48" Id="f1177007-ae4b-465b-9e3e-e692a26e9167" Enabled="1" Message="" MessageTextType="2" PreProcessedMessage="" Condition="" ConditionType="1" CurrentHits="0" File="c:\users\rohme\source\repos\pimower\arduino\windowlibrary\windowmanager\theme.cpp" FileLine="48" FileColumn="1" FunctionName="LoadTheme(eThemeObjType objType, eThemeObjState objState)" FunctionLineOffset="14" FunctionColumnOffset="1" HitCountTarget="1" HitCountType="1" Language="C++" LocationType="3" Tag="&lt;vmbp Id='f1177007-ae4b-465b-9e3e-e692a26e9167'/&gt;" Type="1" ToString="System.__ComObject" BreakWhenHit="1">
        <Source>41			themeSettings.bgColor = val;
42		}
43		else
44		{
45			themeSettings.bgColor = Color::Color32To565(16185078);
46		}
47	
--&gt;48		val = GetThemeAttribute(objType, objState, eThemeObjAttribute::textColor);
49		if (val != -1)
50		{
51			themeSettings.textColor = val;
52		}
53		else
54		{
55			themeSettings.textColor = Color::Color32To565(4539717);
56		}
57	
</Source>
      </BreakPoint>
      <BreakPoint Index="12" Name="Theme.cpp, line 116" Id="576ac0a2-433a-43cd-948f-52d512ad777c" Enabled="1" Message="{val}" MessageTextType="2" PreProcessedMessage="{0}" Condition="" ConditionType="1" CurrentHits="0" File="c:\users\rohme\source\repos\pimower\arduino\windowlibrary\windowmanager\theme.cpp" FileLine="116" FileColumn="1" FunctionName="LoadTheme(eThemeObjType objType, eThemeObjState objState)" FunctionLineOffset="82" FunctionColumnOffset="1" HitCountTarget="1" HitCountType="1" Language="C++" LocationType="3" Tag="&lt;vmbp Id='576ac0a2-433a-43cd-948f-52d512ad777c'/&gt;" Type="1" ToString="System.__ComObject" BreakWhenHit="0">
        <Source>109		{
110			themeSettings.shadowInterpolated = true;
111		}
112		else
113		{
114			themeSettings.shadowInterpolated = false;
115		}
--&gt;116		val = GetThemeAttribute(objType, objState, eThemeObjAttribute::textScale);
117		if (val != -1)
118		{
119			if (val == 0)
120				themeSettings.textScale = 1;
121			else
122				if (val == 1)
123					themeSettings.textScale = 2;
124				else
125					if (val == 2)
</Source>
        <MessageVariables>
          <MessageVariable Name="val" Index="1" />
        </MessageVariables>
      </BreakPoint>
      <BreakPoint Index="13" Name="Theme.cpp, line 31" Id="0fda0742-cbdc-42ce-9e87-62319c1d8b30" Enabled="1" Message="" MessageTextType="2" PreProcessedMessage="" Condition="" ConditionType="1" CurrentHits="0" File="c:\users\rohme\source\repos\pimower\arduino\windowlibrary\windowmanager\theme.cpp" FileLine="31" FileColumn="1" FunctionName="GetThemeAttribute(eThemeObjType objType, eThemeObjState objState, eThemeObjAttribute objAttribute)" FunctionLineOffset="11" FunctionColumnOffset="1" HitCountTarget="1" HitCountType="1" Language="C++" LocationType="3" Tag="&lt;vmbp Id='0fda0742-cbdc-42ce-9e87-62319c1d8b30'/&gt;" Type="1" ToString="System.__ComObject" BreakWhenHit="1">
        <Source>24		if (themeSettings.find(setting) == themeSettings.end())
25		{
26	#ifdef DEBUG
27			Logger::Trace("Theme setting for %d,%d,%d not found", objType, objState, objAttribute);
28	#endif
29			return -1;
30		}
--&gt;31		return themeSettings[setting];
32	}
33	
34	sThemeSettings Theme::LoadTheme(eThemeObjType objType, eThemeObjState objState)
35	{
36		sThemeSettings themeSettings;
37		int val;
38		val = GetThemeAttribute(objType, objState, eThemeObjAttribute::bgColor);
39		if (val != -1)
40		{
</Source>
      </BreakPoint>
      <BreakPoint Index="14" Name="Theme.cpp, line 24" Id="29301bca-b94e-4aa5-9cd8-9812e247b65a" Enabled="1" Message="" MessageTextType="2" PreProcessedMessage="" Condition="" ConditionType="1" CurrentHits="0" File="c:\users\rohme\source\repos\pimower\arduino\windowlibrary\windowmanager\theme.cpp" FileLine="24" FileColumn="1" FunctionName="GetThemeAttribute(eThemeObjType objType, eThemeObjState objState, eThemeObjAttribute objAttribute)" FunctionLineOffset="7" FunctionColumnOffset="1" HitCountTarget="1" HitCountType="1" Language="C++" LocationType="3" Tag="&lt;vmbp Id='29301bca-b94e-4aa5-9cd8-9812e247b65a'/&gt;" Type="1" ToString="System.__ComObject" BreakWhenHit="1">
        <Source>17	int Theme::GetThemeAttribute(eThemeObjType objType, eThemeObjState objState, eThemeObjAttribute objAttribute)
18	{
19		std::string setting;
20		setting.clear();
21		setting += objType;
22		setting += objState;
23		setting += objAttribute;
--&gt;24		if (themeSettings.find(setting) == themeSettings.end())
25		{
26	#ifdef DEBUG
27			Logger::Trace("Theme setting for %d,%d,%d not found", objType, objState, objAttribute);
28	#endif
29			return -1;
30		}
31		return themeSettings[setting];
32	}
33	
</Source>
      </BreakPoint>
    </BreakPoints>
  </Program>
</VisualMicro>
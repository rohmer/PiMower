const uint8_t Aileron_SemiBold9pt7bBitmaps[] PROGMEM = {
  0xDB, 0x6D, 0xB6, 0xCB, 0xE0, 0xDE, 0xF7, 0xBD, 0x80, 0x1B, 0x1A, 0x12,
  0x12, 0x7F, 0x34, 0x24, 0xFF, 0x2C, 0x6C, 0x68, 0x48, 0x08, 0x1F, 0x1F,
  0xD9, 0x6C, 0x87, 0x41, 0xF0, 0x3E, 0x0B, 0x84, 0xF2, 0x6F, 0xE3, 0xE0,
  0x40, 0x70, 0xCD, 0x8C, 0x99, 0x89, 0xB0, 0xF3, 0x00, 0x60, 0x0C, 0x00,
  0xDE, 0x1B, 0x23, 0x33, 0x33, 0x26, 0x1E, 0x1E, 0x1F, 0x86, 0x01, 0x86,
  0x61, 0x8F, 0xF7, 0xFF, 0x86, 0xC1, 0xB0, 0x6F, 0xF8, 0xFE, 0xFE, 0x80,
  0x2D, 0x6D, 0x24, 0x92, 0x64, 0x88, 0xC6, 0x22, 0x33, 0x11, 0x11, 0x33,
  0x26, 0x40, 0x30, 0x63, 0x73, 0xE3, 0x89, 0x12, 0x00, 0x08, 0x08, 0x08,
  0x08, 0xFF, 0x08, 0x08, 0x08, 0x08, 0x36, 0x64, 0xF8, 0xFC, 0x0C, 0x21,
  0x86, 0x10, 0xC3, 0x08, 0x61, 0x84, 0x30, 0xC0, 0x3E, 0x3F, 0xB8, 0xD8,
  0x7C, 0x1E, 0x0F, 0x07, 0x83, 0xC3, 0xF1, 0x9F, 0xC7, 0x80, 0x1D, 0xFE,
  0xE3, 0x0C, 0x30, 0xC3, 0x0C, 0x30, 0xC3, 0x0C, 0x1F, 0x98, 0xDC, 0x7C,
  0x38, 0x18, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1F, 0xFF, 0xF8, 0x3E, 0x3F,
  0xB8, 0xD8, 0x60, 0x30, 0x60, 0x3C, 0x07, 0xC1, 0xE1, 0xDF, 0xC7, 0xC0,
  0x07, 0x07, 0x83, 0xC3, 0xE3, 0x73, 0x39, 0x9D, 0xFF, 0xFF, 0x83, 0x81,
  0xC0, 0xE0, 0x7F, 0x3F, 0x98, 0x08, 0x0D, 0xE7, 0xFB, 0x0E, 0x03, 0xC1,
  0xE1, 0xDF, 0xC7, 0xC0, 0x1E, 0x3F, 0x98, 0xD8, 0x0D, 0xE7, 0xFB, 0x0F,
  0x83, 0xC1, 0xE1, 0x9F, 0xC7, 0x80, 0xFF, 0xFF, 0xC0, 0xC0, 0xE0, 0x60,
  0x60, 0x30, 0x30, 0x18, 0x18, 0x0C, 0x0C, 0x00, 0x3E, 0x3F, 0xB8, 0xD8,
  0x76, 0x31, 0xF1, 0xFD, 0x87, 0xC1, 0xE1, 0xFF, 0xC7, 0xC0, 0x3E, 0x3F,
  0xB0, 0xD8, 0x3C, 0x1E, 0x1D, 0xFE, 0x7B, 0x03, 0x61, 0x9F, 0x87, 0x80,
  0xFC, 0x03, 0xF0, 0x33, 0x30, 0x00, 0x00, 0x76, 0x64, 0x02, 0x1C, 0xE7,
  0x0C, 0x0E, 0x07, 0x03, 0x00, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0x80, 0xE0,
  0x3C, 0x0F, 0x03, 0x1E, 0x78, 0xC0, 0x00, 0x3C, 0xFE, 0xC7, 0xC7, 0x06,
  0x0E, 0x1C, 0x18, 0x30, 0x10, 0x38, 0x30, 0x07, 0xC0, 0xE3, 0x0C, 0x04,
  0xC4, 0x34, 0xFC, 0xE6, 0x66, 0x63, 0x33, 0x19, 0x99, 0x8C, 0xFE, 0xF3,
  0xB8, 0xC0, 0x03, 0x8E, 0x0F, 0xC0, 0x06, 0x00, 0xF0, 0x0F, 0x01, 0x98,
  0x19, 0x81, 0x98, 0x3F, 0xC3, 0xFC, 0x30, 0xC6, 0x06, 0x60, 0x6E, 0x06,
  0xFE, 0x7F, 0xB0, 0xD8, 0x6C, 0x37, 0xF3, 0xFD, 0x87, 0xC1, 0xE1, 0xFF,
  0xDF, 0xC0, 0x1F, 0x07, 0xF9, 0x83, 0x70, 0x3C, 0x01, 0x80, 0x30, 0x06,
  0x00, 0xE0, 0x6C, 0x18, 0xFF, 0x0F, 0x80, 0xFE, 0x3F, 0xCC, 0x1B, 0x07,
  0xC0, 0xF0, 0x3C, 0x0F, 0x03, 0xC1, 0xF0, 0x6F, 0xF3, 0xF8, 0xFF, 0xFF,
  0xC0, 0xC0, 0xC0, 0xFE, 0xFE, 0xC0, 0xC0, 0xC0, 0xFF, 0xFF, 0xFF, 0xFF,
  0xC0, 0xC0, 0xC0, 0xFE, 0xFE, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0x1F, 0x07,
  0xF9, 0x83, 0x70, 0x3C, 0x01, 0x80, 0x30, 0xFE, 0x1F, 0xE0, 0x6C, 0x1D,
  0xFF, 0x8F, 0xB0, 0xC0, 0xF0, 0x3C, 0x0F, 0x03, 0xC0, 0xFF, 0xFF, 0xFF,
  0x03, 0xC0, 0xF0, 0x3C, 0x0F, 0x03, 0xFF, 0xFF, 0xFF, 0x03, 0x03, 0x03,
  0x03, 0x03, 0x03, 0x03, 0xC3, 0xC3, 0xC3, 0x7E, 0x3C, 0xC1, 0xB0, 0xCC,
  0x63, 0x30, 0xD8, 0x3C, 0x0F, 0x83, 0x70, 0xCC, 0x31, 0x8C, 0x73, 0x0E,
  0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xFF, 0xFF,
  0xE0, 0x7E, 0x07, 0xF0, 0xFF, 0x0F, 0xF0, 0xFD, 0x9B, 0xD9, 0xBD, 0x9B,
  0xCF, 0x3C, 0xF3, 0xCF, 0x3C, 0x63, 0xE0, 0xF8, 0x3F, 0x0F, 0xC3, 0xD8,
  0xF6, 0x3C, 0xCF, 0x3B, 0xC6, 0xF0, 0xFC, 0x3F, 0x07, 0x1F, 0x03, 0xFC,
  0x60, 0xEE, 0x06, 0xC0, 0x6C, 0x07, 0xC0, 0x7C, 0x06, 0xC0, 0x66, 0x0E,
  0x3F, 0xC1, 0xF0, 0xFE, 0x7F, 0xB0, 0xD8, 0x7C, 0x3E, 0x1B, 0xFD, 0xF8,
  0xC0, 0x60, 0x30, 0x18, 0x00, 0x1F, 0x03, 0xFC, 0x60, 0xEE, 0x06, 0xC0,
  0x6C, 0x07, 0xC0, 0x7C, 0x06, 0xC0, 0x66, 0x0C, 0x31, 0xC1, 0xFF, 0x00,
  0x20, 0xFE, 0x7F, 0xB0, 0xF8, 0x7C, 0x37, 0xFB, 0xF9, 0x8E, 0xC3, 0x61,
  0xB0, 0xD8, 0x30, 0x3E, 0x3F, 0xB8, 0xFC, 0x36, 0x03, 0xF0, 0x7C, 0x07,
  0xC1, 0xE0, 0xDF, 0xC7, 0xC0, 0xFF, 0xFF, 0xFC, 0x18, 0x03, 0x00, 0x60,
  0x0C, 0x01, 0x80, 0x30, 0x06, 0x00, 0xC0, 0x18, 0x03, 0x00, 0xE0, 0xF8,
  0x3E, 0x0F, 0x83, 0xE0, 0xF8, 0x3E, 0x0F, 0x83, 0x60, 0xD8, 0x37, 0xF8,
  0x7C, 0x60, 0x76, 0x06, 0x70, 0x63, 0x0C, 0x30, 0xC3, 0x8C, 0x19, 0x81,
  0x98, 0x1D, 0x80, 0xF0, 0x0F, 0x00, 0x70, 0xE1, 0xC1, 0xB0, 0xE0, 0xD8,
  0x78, 0xCC, 0x2C, 0x63, 0x36, 0x31, 0x99, 0x18, 0xCC, 0xD8, 0x64, 0x6C,
  0x1E, 0x36, 0x0F, 0x1A, 0x07, 0x87, 0x03, 0x83, 0x80, 0x60, 0x63, 0x0C,
  0x39, 0xC1, 0x98, 0x0F, 0x00, 0xE0, 0x0F, 0x00, 0xF0, 0x19, 0x83, 0x1C,
  0x70, 0xC6, 0x06, 0xE0, 0xEC, 0x18, 0xC6, 0x1C, 0xC1, 0xB0, 0x3E, 0x03,
  0x80, 0x30, 0x06, 0x00, 0xC0, 0x18, 0x03, 0x00, 0xFF, 0xFF, 0xC0, 0xE0,
  0xE0, 0x60, 0x60, 0x60, 0x70, 0x70, 0x30, 0x3F, 0xFF, 0xF0, 0xF2, 0x49,
  0x24, 0x92, 0x49, 0x38, 0x83, 0x04, 0x10, 0x60, 0x82, 0x0C, 0x10, 0x41,
  0x82, 0x0C, 0xE4, 0x92, 0x49, 0x24, 0x92, 0x78, 0x18, 0x1C, 0x34, 0x26,
  0x22, 0x62, 0x43, 0xFE, 0x44, 0x3C, 0x7E, 0xC6, 0x06, 0x3E, 0xE6, 0xC6,
  0xC6, 0xFE, 0x7F, 0xC0, 0x30, 0x0C, 0x03, 0x78, 0xFF, 0xB8, 0x6C, 0x1B,
  0x07, 0xC1, 0xF0, 0x6E, 0x1B, 0xFC, 0xDE, 0x00, 0x1E, 0x1F, 0x98, 0x6C,
  0x3E, 0x07, 0x01, 0x80, 0xC3, 0x7F, 0x0F, 0x00, 0x00, 0xC0, 0x30, 0x0C,
  0x7B, 0x3F, 0xD8, 0x76, 0x0F, 0x83, 0xE0, 0xD8, 0x36, 0x1D, 0xFF, 0x1E,
  0xC0, 0x1E, 0x1F, 0x98, 0x6C, 0x3F, 0xFF, 0xFD, 0x80, 0xC3, 0x3F, 0x0F,
  0x00, 0x39, 0xD8, 0xCF, 0xBD, 0x8C, 0x63, 0x18, 0xC6, 0x00, 0x1E, 0xCF,
  0xF6, 0x1D, 0x83, 0xE0, 0xF8, 0x36, 0x0D, 0x87, 0x7F, 0xC7, 0xB6, 0x0D,
  0x86, 0x3F, 0x83, 0x00, 0xC0, 0x60, 0x30, 0x1B, 0xCF, 0xF7, 0x1F, 0x0F,
  0x83, 0xC1, 0xE0, 0xF0, 0x78, 0x3C, 0x18, 0xF3, 0xFF, 0xFF, 0xC0, 0x6C,
  0x36, 0xDB, 0x6D, 0xB6, 0xDF, 0xC0, 0xC0, 0x60, 0x30, 0x18, 0x6C, 0x66,
  0x63, 0x71, 0xF0, 0xF8, 0x7E, 0x33, 0x98, 0xEC, 0x30, 0xDB, 0x6D, 0xB6,
  0xDB, 0x76, 0xDE, 0xF7, 0xF7, 0xF8, 0xC7, 0x86, 0x3C, 0x31, 0xE1, 0x8F,
  0x0C, 0x78, 0x63, 0xC3, 0x1E, 0x18, 0xC0, 0xDE, 0x7F, 0xB8, 0xF8, 0x7C,
  0x1E, 0x0F, 0x07, 0x83, 0xC1, 0xE0, 0xC0, 0x1F, 0x0F, 0xE6, 0x1D, 0x83,
  0xE0, 0xF8, 0x36, 0x0D, 0x87, 0x3F, 0x87, 0xC0, 0xDF, 0x3C, 0xEE, 0x1B,
  0x06, 0xC1, 0xF0, 0x7C, 0x1B, 0x86, 0xFF, 0x37, 0x8C, 0x03, 0x00, 0xC0,
  0x00, 0x1E, 0xCF, 0xF6, 0x1D, 0x83, 0xE0, 0xF8, 0x36, 0x0D, 0x87, 0x7F,
  0xC7, 0xB0, 0x0C, 0x03, 0x00, 0xC0, 0xDF, 0xF9, 0x8C, 0x63, 0x18, 0xC6,
  0x00, 0x3C, 0x7E, 0x63, 0x60, 0x7C, 0x1E, 0x03, 0xE3, 0x7F, 0x3E, 0x31,
  0x8D, 0xF3, 0x18, 0xC6, 0x31, 0x8E, 0x70, 0xC3, 0xC3, 0xC3, 0xC3, 0xC3,
  0xC3, 0xC3, 0xC3, 0xFF, 0x7F, 0xC1, 0xB8, 0x66, 0x19, 0x8C, 0x33, 0x0C,
  0xC3, 0x60, 0x78, 0x1C, 0x07, 0x00, 0xC3, 0x0F, 0x8E, 0x36, 0x79, 0x99,
  0xE6, 0x66, 0x98, 0xD3, 0x63, 0xCD, 0x0F, 0x3C, 0x3C, 0x70, 0x61, 0x80,
  0xE3, 0xB1, 0x8D, 0x87, 0xC1, 0xC0, 0xE0, 0xF8, 0xEC, 0x63, 0x61, 0xC0,
  0xC1, 0xB8, 0x66, 0x39, 0x8C, 0x33, 0x0C, 0x83, 0x60, 0x78, 0x1C, 0x07,
  0x00, 0xC0, 0x60, 0x78, 0x18, 0x00, 0x7F, 0x7F, 0x06, 0x0E, 0x0C, 0x18,
  0x30, 0x70, 0xFF, 0xFF, 0x36, 0x66, 0x22, 0x2C, 0x62, 0x22, 0x66, 0x30,
  0xFF, 0xFF, 0xC0, 0xC6, 0x64, 0x44, 0x43, 0x64, 0x44, 0x66, 0xC0, 0x61,
  0x7D, 0xCF };

const GFXglyph Aileron_SemiBold9pt7bGlyphs[] PROGMEM = {
  {     0,   0,   0,   4,    0,    1 },   // 0x20 ' '
  {     0,   3,  12,   4,    1,  -11 },   // 0x21 '!'
  {     5,   5,   5,   6,    1,  -12 },   // 0x22 '"'
  {     9,   8,  12,  11,    1,  -11 },   // 0x23 '#'
  {    21,   9,  14,  11,    1,  -12 },   // 0x24 '$'
  {    37,  12,  12,  13,    1,  -11 },   // 0x25 '%'
  {    55,  10,  12,  12,    1,  -11 },   // 0x26 '&'
  {    70,   2,   5,   3,    1,  -12 },   // 0x27 '''
  {    72,   3,  15,   6,    2,  -13 },   // 0x28 '('
  {    78,   4,  15,   6,    0,  -13 },   // 0x29 ')'
  {    86,   7,   7,  10,    2,   -7 },   // 0x2A '*'
  {    93,   8,   9,  11,    1,   -9 },   // 0x2B '+'
  {   102,   4,   4,   4,   -1,   -1 },   // 0x2C ','
  {   104,   5,   1,   5,    0,   -5 },   // 0x2D '-'
  {   105,   2,   3,   4,    1,   -2 },   // 0x2E '.'
  {   106,   6,  13,   6,    0,  -12 },   // 0x2F '/'
  {   116,   9,  12,  11,    1,  -11 },   // 0x30 '0'
  {   130,   6,  12,  11,    2,  -11 },   // 0x31 '1'
  {   139,   9,  13,  11,    1,  -12 },   // 0x32 '2'
  {   154,   9,  12,  11,    1,  -11 },   // 0x33 '3'
  {   168,   9,  12,  11,    1,  -11 },   // 0x34 '4'
  {   182,   9,  12,  11,    1,  -11 },   // 0x35 '5'
  {   196,   9,  12,  11,    1,  -11 },   // 0x36 '6'
  {   210,   9,  12,  11,    1,  -11 },   // 0x37 '7'
  {   224,   9,  12,  11,    1,  -11 },   // 0x38 '8'
  {   238,   9,  12,  11,    1,  -11 },   // 0x39 '9'
  {   252,   2,  10,   4,    1,   -9 },   // 0x3A ':'
  {   255,   4,  12,   4,   -1,   -9 },   // 0x3B ';'
  {   261,   7,   9,  11,    2,   -8 },   // 0x3C '<'
  {   269,   8,   5,  11,    1,   -7 },   // 0x3D '='
  {   274,   8,   9,  11,    1,   -8 },   // 0x3E '>'
  {   283,   8,  12,   9,    1,  -11 },   // 0x3F '?'
  {   295,  13,  14,  15,    1,  -11 },   // 0x40 '@'
  {   318,  12,  12,  12,    0,  -11 },   // 0x41 'A'
  {   336,   9,  12,  11,    2,  -11 },   // 0x42 'B'
  {   350,  11,  12,  12,    1,  -11 },   // 0x43 'C'
  {   367,  10,  12,  13,    2,  -11 },   // 0x44 'D'
  {   382,   8,  12,  11,    2,  -11 },   // 0x45 'E'
  {   394,   8,  12,  10,    2,  -11 },   // 0x46 'F'
  {   406,  11,  12,  13,    1,  -11 },   // 0x47 'G'
  {   423,  10,  12,  13,    2,  -11 },   // 0x48 'H'
  {   438,   2,  12,   5,    2,  -11 },   // 0x49 'I'
  {   441,   8,  12,  10,    1,  -11 },   // 0x4A 'J'
  {   453,  10,  12,  11,    2,  -11 },   // 0x4B 'K'
  {   468,   8,  12,  10,    2,  -11 },   // 0x4C 'L'
  {   480,  12,  12,  16,    2,  -11 },   // 0x4D 'M'
  {   498,  10,  12,  13,    2,  -11 },   // 0x4E 'N'
  {   513,  12,  12,  13,    1,  -11 },   // 0x4F 'O'
  {   531,   9,  12,  11,    2,  -11 },   // 0x50 'P'
  {   545,  12,  13,  13,    1,  -11 },   // 0x51 'Q'
  {   565,   9,  12,  11,    2,  -11 },   // 0x52 'R'
  {   579,   9,  12,  10,    1,  -11 },   // 0x53 'S'
  {   593,  11,  12,  11,    0,  -11 },   // 0x54 'T'
  {   610,  10,  12,  12,    1,  -11 },   // 0x55 'U'
  {   625,  12,  12,  11,    0,  -11 },   // 0x56 'V'
  {   643,  17,  12,  17,    0,  -11 },   // 0x57 'W'
  {   669,  12,  12,  11,    0,  -11 },   // 0x58 'X'
  {   687,  11,  12,  11,    0,  -11 },   // 0x59 'Y'
  {   704,   9,  12,  11,    1,  -11 },   // 0x5A 'Z'
  {   718,   3,  15,   6,    2,  -13 },   // 0x5B '['
  {   724,   6,  13,   6,    0,  -12 },   // 0x5C '\'
  {   734,   3,  15,   6,    1,  -13 },   // 0x5D ']'
  {   740,   8,   7,  11,    1,  -10 },   // 0x5E '^'
  {   747,   7,   1,   9,    1,    1 },   // 0x5F '_'
  {   748,   3,   2,   5,    0,  -11 },   // 0x60 '`'
  {   749,   8,  10,  10,    1,   -9 },   // 0x61 'a'
  {   759,  10,  13,  11,    1,  -12 },   // 0x62 'b'
  {   776,   9,  10,  10,    0,   -9 },   // 0x63 'c'
  {   788,  10,  13,  11,    0,  -12 },   // 0x64 'd'
  {   805,   9,  10,  10,    0,   -9 },   // 0x65 'e'
  {   817,   5,  13,   6,    0,  -12 },   // 0x66 'f'
  {   826,  10,  14,  11,    0,   -9 },   // 0x67 'g'
  {   844,   9,  13,  11,    1,  -12 },   // 0x68 'h'
  {   859,   2,  13,   4,    1,  -12 },   // 0x69 'i'
  {   863,   3,  17,   4,    0,  -12 },   // 0x6A 'j'
  {   870,   9,  13,  10,    1,  -12 },   // 0x6B 'k'
  {   885,   3,  13,   5,    1,  -12 },   // 0x6C 'l'
  {   890,  13,  10,  16,    1,   -9 },   // 0x6D 'm'
  {   907,   9,  10,  11,    1,   -9 },   // 0x6E 'n'
  {   919,  10,  10,  10,    0,   -9 },   // 0x6F 'o'
  {   932,  10,  13,  11,    1,   -9 },   // 0x70 'p'
  {   949,  10,  13,  11,    0,   -9 },   // 0x71 'q'
  {   966,   5,  10,   6,    1,   -9 },   // 0x72 'r'
  {   973,   8,  10,   8,    0,   -9 },   // 0x73 's'
  {   983,   5,  12,   6,    0,  -11 },   // 0x74 't'
  {   991,   8,  10,  11,    1,   -9 },   // 0x75 'u'
  {  1001,  10,  10,   9,    0,   -9 },   // 0x76 'v'
  {  1014,  14,  10,  14,    0,   -9 },   // 0x77 'w'
  {  1032,   9,  10,   9,    0,   -9 },   // 0x78 'x'
  {  1044,  10,  14,   9,    0,   -9 },   // 0x79 'y'
  {  1062,   8,  10,   8,    0,   -9 },   // 0x7A 'z'
  {  1072,   4,  15,   6,    1,  -13 },   // 0x7B '{'
  {  1080,   1,  18,   5,    2,  -13 },   // 0x7C '|'
  {  1083,   4,  15,   6,    1,  -13 },   // 0x7D '}'
  {  1091,   8,   3,  11,    1,   -6 } }; // 0x7E '~'

const GFXfont Aileron_SemiBold9pt7b PROGMEM = {
  (uint8_t  *)Aileron_SemiBold9pt7bBitmaps,
  (GFXglyph *)Aileron_SemiBold9pt7bGlyphs,
  0x20, 0x7E, 21 };

// Approx. 1766 bytes
